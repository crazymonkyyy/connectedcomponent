struct array2d(T,size_t x,size_t y){
  T[x][y] payload; alias payload this;
  auto opIndex(size_t i,size_t j){return &payload[i][j];}
  auto opIndex(T* where){
    struct vec2{size_t x;size_t y;}
    const T* zero=payload[0][0];
    int n=(cast(int)(where-zero))/sizeof(T);
    return vec2(n/x,n%x);
  }
}

unittest{
  my2darray!(int,5,5) foo;
  smartelem!int bar= foo[2,3];
  assert(bar.x==2);
  assert(bar.y==3);
  *foo[2,3]=5;
  assert(*bar==5);
}